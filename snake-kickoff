
#!/bin/bash 
# Wrapper to perform genome assembly 

# Run whatever Bash commands here
PROJECT_DIR=${PROJECT_DIR:-/spyne}
BBTOOLS_DIR=/opt/bbtools
IRMA_DIR=/flu-amd
DAIS_DIR=/dias-ribosome

# Export bbtools to system path
bbtools_path=`ls ${BBTOOLS_DIR}`

for eachdir in ${bbtools_path}
do
	export PATH=$PATH:${BBTOOLS_DIR}/${eachdir}
done

# Export irma to system path
export PATH=$PATH:${IRMA_DIR}

# Check IRMA version
IRMA --version

# Check IRMA-CORE version
${IRMA_DIR}/IRMA_RES/scripts/irma-core_Linux --version

# Export dais-ribosome to system path
export PATH=$PATH:${DAIS_DIR}

# Check dais-ribosome version
ribosome help

# Check the java version
java --version

# Check JDK version
javac -version

# Kill any running snakemake processes
#kill -9 $(ps -A | grep snakemake | awk '{print $1}')

run_path=$(dirname $(readlink -f $1))

# Archive previous run
if [ -f ${run_path}/spyne_logs.tar.gz ]; then
	tar  --remove-files -czf ${run_path}/previous_run_$(date -d @$(stat -c %Y ${run_path}/spyne_logs.tar.gz) "+%Y%b%d-%H%M%S").tar.gz ${run_path}/spyne_logs.tar.gz ${run_path}/*fasta ${run_path}/dash-json ${run_path}/irma_allconsensus_bam.tar.gz ${run_path}/config.yaml ${run_path}/.snakemake
fi

# Create config.yaml from samplesheet
until [ -f ${run_path}/spyne_logs.tar.gz ]; do
	python3 $PROJECT_DIR/scripts/config_create.py "$@"
done

